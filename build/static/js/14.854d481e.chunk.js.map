{"version":3,"sources":["components/shared-components/RegiondataWidget/index.js","constants/ChartConstant.js","components/shared-components/DonutChartWidget/index.js","components/shared-components/AvatarStatus/index.js","views/app-views/super-admins/AnalyticDashboardData.js","views/app-views/super-admins/index.js","constants/DateConstant.js"],"names":["useBreakpoint","Grid","mapColor","getHighlightedRegion","name","data","length","i","elm","color","getRegionHoverColor","utils","shadeColor","MapChart","setTooltipContent","mapSource","mapType","style","transform","data-tip","height","projectionConfig","scale","geography","geographies","map","geo","geoName","properties","NAME_1","onMouseEnter","value","getRegionValue","onMouseLeave","fill","stroke","hover","outline","rsmKey","Map","props","useState","content","setContent","renderDataList","className","RegiondataWidget","title","list","isMobile","getBreakPoint","includes","bodyStyle","padding","xs","sm","md","lg","minHeight","defaultProps","WorldMap","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","defaultOption","plotOptions","pie","size","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","formatter","seriesTotals","reduce","a","b","Chart","DonutChartWidget","customOptions","extra","bodyClass","options","type","renderAvatar","text","AvatarStatus","suffix","subTitle","id","src","icon","shape","gap","onNameClick","onClick","regionData","sessionColor","sessionData","sessionLabels","conbinedSessionData","arr","jointSessionData","rederRegionTopEntrance","AnalyticDashboard","menu","columns","dataIndex","key","render","latestTransactionOption","Item","ReloadOutlined","PrinterOutlined","FileExcelOutlined","tableColumns","record","backgroundColor","avatarColor","getNameInitial","tableColumns02","_","Flex","image","sorter","antdTableSorter","moment","unix","date","format","status","orderStatus","paymentStatus","displayType","Math","round","amount","toFixed","prefix","thousandSeparator","gutter","xxl","justify","maxWidth","alignItems","justifyContent","pagination","dataSource","rowKey","overlay","trigger","placement","href","e","preventDefault","EllipsisOutlined","expandable","expandedRowRender","margin","description","rowExpandable","age","address"],"mappings":"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","file":"static/js/14.854d481e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Card, Row, Col, Badge, Grid } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from 'react-tooltip'\r\nimport WorldMap from 'assets/maps/world-countries-sans-antarctica.json'\r\nimport utils from 'utils'\r\n\r\nconst { useBreakpoint } = Grid;\r\nconst geoUrl = WorldMap;\r\nconst mapColor = '#F5F4F6';\r\nconst hoverPercentage = -10;\r\n\r\nconst getHighlightedRegion = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn elm.color\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mapColor\r\n\t}\r\n\treturn mapColor\r\n}\r\n\r\nconst getRegionHoverColor = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn utils.shadeColor(elm.color, hoverPercentage)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n\t}\r\n\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n}\r\n\r\nconst getRegionValue = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn `${elm.name} — ${elm.value}`\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ''\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst MapChart = ({ setTooltipContent, data, mapSource, mapType }) => {\r\n  \treturn (\r\n\t\t<ComposableMap style={{transform: `${mapType === 'world' ? 'translateY(20px)' : 'none'}`}} data-tip=\"\" height={380} projectionConfig={{ scale: 145 }}>\r\n\t\t\t<Geographies geography={mapSource}>\r\n\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\tgeographies.map(geo => {\r\n\t\t\t\t\t\tconst geoName = mapType === 'world' ? geo.properties.name : geo.properties.NAME_1 \r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(getRegionValue(geoName, data));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tfill={getHighlightedRegion(geoName, data)}\r\n\t\t\t\t\t\t\t\tstroke=\"#D6D6DA\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\t\t\tfill: getRegionHoverColor(geoName, data),\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Geographies>\r\n\t\t</ComposableMap>\r\n    )\r\n}\r\n\r\nconst Map = props => {\r\n\tconst { data, mapSource, mapType } = props\r\n\tconst [content, setContent] = useState(\"\");\r\n\treturn (\r\n    <>\r\n      <MapChart data={data} mapSource={mapSource} mapType={mapType} setTooltipContent={setContent} />\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nconst renderDataList = data => {\r\n\tconst list = data.map(elm => (\r\n\t\t<div className=\"d-flex align-items-center justify-content-between mb-3\" key={elm.name}>\r\n\t\t\t<div>\r\n\t\t\t\t<Badge color={elm.color} />\r\n\t\t\t\t<span className=\"text-gray-light\">{elm.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<span className=\"font-weight-bold text-dark\">{elm.value}</span>\r\n\t\t</div>\r\n\t))\r\n\treturn list\r\n}\r\n\r\nexport const RegiondataWidget = props => {\r\n\tconst { data, mapSource, mapType, title, content, list } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\treturn (\r\n\t\t<Card bodyStyle={{padding: 0}}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={7} className=\"border-right\">\r\n\t\t\t\t\t<div className=\"d-flex flex-column p-3 justify-content-between h-100\">\r\n\t\t\t\t\t\t<div>{title && <h4 className=\"font-weight-bold\">{title}</h4>}</div>\r\n\t\t\t\t\t\t<div>{content}</div>\r\n\t\t\t\t\t\t<div>{list ? list : renderDataList(data)}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={17}>\r\n\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\" style={{minHeight: isMobile ? 200 : 435 }}>\r\n\t\t\t\t\t\t<div className=\"p-3 w-100\" >\r\n\t\t\t\t\t\t\t<Map data={data} mapSource={mapSource} mapType={mapType}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nRegiondataWidget.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tdata: PropTypes.array,\r\n\tmapSource: PropTypes.object,\r\n\tmapType: PropTypes.string,\r\n\tcontent: PropTypes.element,\r\n\tlist: PropTypes.element\r\n}\r\n\r\nRegiondataWidget.defaultProps = {\r\n\tdata: [],\r\n\tmapSource: geoUrl,\r\n\tmapType: 'world'\r\n};\r\n\r\nexport default RegiondataWidget","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React from 'react'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { apexPieChartDefaultOption } from 'constants/ChartConstant';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst defaultOption = apexPieChartDefaultOption;\r\n\r\nconst Chart = props => {\r\n\treturn (\r\n\t\t<ApexChart {...props} />\r\n\t)\r\n}\r\n\r\nconst DonutChartWidget = props => {\r\n\tconst { series, customOptions, labels, width, height, title, extra, bodyClass } = props\r\n\tlet options = defaultOption\r\n\toptions.labels = labels\r\n\toptions.plotOptions.pie.donut.labels.total.label = title\r\n\tif(!title) {\r\n\t\toptions.plotOptions.pie.donut.labels.show = false\r\n\t}\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div className={`text-center ${bodyClass}`}>\r\n\t\t\t\t<Chart type=\"donut\" options={options} series={series} width={width} height={height} />\r\n\t\t\t\t{extra}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDonutChartWidget.propTypes = {\r\n\tseries: PropTypes.array.isRequired,\r\n\tlabels: PropTypes.array,\r\n\ttitle: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nDonutChartWidget.defaultProps = {\r\n\tseries: [],\r\n\tlabels: [],\r\n\ttitle: '',\r\n\theight: 250,\r\n\twidth: '100%'\r\n};\r\n\r\nexport default DonutChartWidget\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import { COLORS } from 'constants/ChartConstant';\r\n\r\nexport const regionData = [\r\n\t{\r\n\t\tcolor: '#3e82f7',\r\n\t\tname: 'United States of America',\r\n\t\tvalue: '37.61%'\r\n  \t},\r\n  \t{\r\n\t\tcolor: '#04d182',\r\n\t\tname: 'Brazil',\r\n\t\tvalue: '16.79%'\r\n  \t},\r\n \t {\r\n\t\tcolor: '#ffc542',\r\n\t\tname: 'India',\r\n\t\tvalue: '12.42%'\r\n \t},\r\n  \t{\r\n\t\tcolor: '#fa8c16',\r\n\t\tname: 'China',\r\n\t\tvalue: '9.85%'\r\n\t},\r\n\t{\r\n\t\tcolor: '#ff6b72',\r\n\t\tname: 'Malaysia',\r\n\t\tvalue: '7.68%'\r\n\t},\r\n\t{\r\n\t\tcolor: '#a461d8',\r\n\t\tname: 'Thailand',\r\n\t\tvalue: '5.11%'\r\n\t}\r\n]\r\n\r\nexport const pagesViewData = [\r\n\t{\r\n    title: 'Home',\r\n    url:'/app/home/',\r\n    amount: 7616\r\n  },\r\n  {\r\n    title: 'Resources',\r\n    url:'/app/resources/',\r\n    amount: 6923\r\n  },\r\n  {\r\n    title: 'Integrations',\r\n    url: '/integrations/paypal/',\r\n    amount: 5228\r\n  },\r\n  {\r\n    title: 'Partners',\r\n    url: '/partners/our-partners/',\r\n    amount: 3512\r\n  },\r\n  {\r\n    title: 'Developers',\r\n    url: 'developers/docs/',\r\n    amount: 1707\r\n  }\r\n]\r\n\r\nexport const sessionColor = [COLORS[3], COLORS[0]]\r\nexport const sessionData = [3561, 1443]\r\nexport const sessionLabels = [\"Female\", \"Male\"]\r\nconst jointSessionData = () => {\r\n\tlet arr = []\r\n\tfor (let i = 0; i < sessionData.length; i++) {\r\n\t\tconst data = sessionData[i];\r\n\t\tconst label = sessionLabels[i];\r\n\t\tconst color = sessionColor[i]\r\n\t\tarr = [...arr, {\r\n\t\t\tdata: data,\r\n\t\t\tlabel: label,\r\n\t\t\tcolor: color\r\n\t\t}]\r\n\t}\r\n\treturn arr\r\n}\r\nexport const conbinedSessionData = jointSessionData()\r\n\r\nexport const socialMediaReferralData = [\r\n\t{\r\n\t\ttitle: 'Facebook',\r\n\t\tdata:  [{\r\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47]\r\n\t\t}],\r\n\t\tpercentage: 30.1,\r\n\t\tamount: 322\r\n\t},\r\n\t{\r\n\t\ttitle: 'Twitter',\r\n\t\tdata:  [{\r\n\t\t\tdata: [9, 32, 12, 42, 25, 33]\r\n\t\t}],\r\n\t\tpercentage: 21.6,\r\n\t\tamount: 217\r\n\t},\r\n\t{\r\n\t\ttitle: 'Youtube',\r\n\t\tdata:  [{\r\n\t\t\tdata: [10, 9, 29, 19, 22, 9, 12]\r\n\t\t}],\r\n\t\tpercentage: -7.1,\r\n\t\tamount: 188\r\n\t},\r\n\t{\r\n\t\ttitle: 'Linkedin',\r\n\t\tdata:  [{\r\n\t\t\tdata: [25, 66, 41, 89, 63, 25, 44]\r\n\t\t}],\r\n\t\tpercentage: 11.9,\r\n\t\tamount: 207\r\n\t\t},\r\n\t{\r\n\t\ttitle: 'Dribbble',\r\n\t\tdata:  [{\r\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47, 75, 65, 19, 14]\r\n\t\t}],\r\n\t\tpercentage: -28.5,\r\n\t\tamount: 86\r\n\t}\r\n]\r\n\r\nexport const uniqueVisitorsDataDay = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [12, 4, 7, 15]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [8, 6, 10, 11]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '12:00 AM', \r\n\t\t'6:00 AM', \r\n\t\t'12:00 PM', \r\n\t\t'6:00 PM', \r\n\t]\r\n}\r\n\r\nexport const uniqueVisitorsDataWeek = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '01 Jan', \r\n\t  '02 Jan', \r\n\t  '03 Jan', \r\n\t  '04 Jan', \r\n\t  '05 Jan', \r\n\t  '06 Jan', \r\n\t  '07 Jan'\r\n\t]\r\n}\r\n\r\nexport const uniqueVisitorsDataMonth = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29, 25, 31, 15]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21, 15, 20, 16]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t\t'03 Jan', \r\n\t\t'06 Jan', \r\n\t\t'09 Jan', \r\n\t\t'12 Jan', \r\n\t\t'15 Jan',\r\n\t\t'18 Jan',\r\n\t\t'21 Jan',\r\n\t\t'24 Jan',\r\n\t\t'27 Jan',\r\n\t\t'30 Jan'\r\n\t]\r\n}\r\n","import React from 'react'\r\nimport { Row, Col, Card, Avatar, Tag,Dropdown, Table, Badge, Menu } from 'antd';\r\nimport RegiondataWidget from 'components/shared-components/RegiondataWidget';\r\nimport DonutChartWidget from 'components/shared-components/DonutChartWidget'\r\nimport Flex from 'components/shared-components/Flex'\r\nimport NumberFormat from 'react-number-format';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport utils from 'utils'\r\nimport {\r\n   ReloadOutlined,\r\n  PrinterOutlined,\r\n  FileExcelOutlined,\r\n  EllipsisOutlined\r\n} from '@ant-design/icons';\r\nimport { \r\n  regionData, \r\n  sessionData, \r\n  sessionLabels, \r\n  conbinedSessionData,\r\n  sessionColor,\r\n} from './AnalyticDashboardData'\r\nimport moment from 'moment'; \r\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\r\n\r\n\r\nconst rederRegionTopEntrance = (\r\n  <div className=\"mb-4\">\r\n    <div className=\"d-flex align-items-center\">\r\n      <Avatar size={20} src=\"/img/flags/us.png\"/>\r\n      <h2 className=\"mb-0 ml-2 font-weight-bold\">37.61%</h2>\r\n    </div>\r\n    <span className=\"text-muted\">Top entrance region</span>\r\n  </div>\r\n)\r\n\r\nexport const AnalyticDashboard = () => {\r\n\r\n\r\n  const cardDropdown = (menu) => (\r\n    <Dropdown overlay={menu} trigger={['click']} placement=\"bottomRight\">\r\n      <a href=\"/#\" className=\"text-gray font-size-lg\" onClick={e => e.preventDefault()}>\r\n        <EllipsisOutlined />\r\n      </a>\r\n    </Dropdown>\r\n  )\r\n        \r\n\r\n  const columns = [\r\n    { title: 'Name', dataIndex: 'name', key: 'name' },\r\n    { title: 'Age', dataIndex: 'age', key: 'age' },\r\n    { title: 'Address', dataIndex: 'address', key: 'address' },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: () => <a>Delete</a>,\r\n    },\r\n  ];\r\n  \r\n  const data = [\r\n    {\r\n      key: 1,\r\n      name: 'John Brown',\r\n      age: 32,\r\n      address: 'New York No. 1 Lake Park',\r\n      description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\r\n    },\r\n    {\r\n      key: 2,\r\n      name: 'Jim Green',\r\n      age: 42,\r\n      address: 'London No. 1 Lake Park',\r\n      description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\r\n    },\r\n    {\r\n      key: 3,\r\n      name: 'Not Expandable',\r\n      age: 29,\r\n      address: 'Jiangsu No. 1 Lake Park',\r\n      description: 'This not expandable',\r\n    },\r\n    {\r\n      key: 4,\r\n      name: 'Joe Black',\r\n      age: 32,\r\n      address: 'Sidney No. 1 Lake Park',\r\n      description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n    },\r\n  ];\r\n  \r\n const RecentTransactionData = [\r\n\t{\r\n\t\tid: '#5331',\r\n\t\tname: 'Clayton Bates',\r\n\t\tdate: '8 May 2020',\r\n\t\tamount: '$137.00',\r\n\t\tstatus: 'Approved',\r\n\t\tavatarColor: '#04d182'\r\n\t},\r\n\t{\r\n\t\tid: '#5332',\r\n\t\tname: 'Gabriel Frazier',\r\n\t\tdate: '6 May 2020',\r\n\t\tamount: '$322.00',\r\n\t\tstatus: 'Approved',\r\n\t\tavatarColor: '#fa8c16'\r\n\t},\r\n\t{\r\n\t\tid: '#5333',\r\n\t\tname: 'Debra Hamilton',\r\n\t\tdate: '1 May 2020',\r\n\t\tamount: '$543.00',\r\n\t\tstatus: 'Pending',\r\n\t\tavatarColor: '#1890ff'\r\n\t},\r\n\t{\r\n\t\tid: '#5334',\r\n\t\tname: 'Stacey Ward',\r\n\t\tdate: '28 April 2020',\r\n\t\tamount: '$876.00',\r\n\t\tstatus: 'Rejected',\r\n\t\tavatarColor: '#ffc542'\r\n\t},\r\n\t{\r\n\t\tid: '#5335',\r\n\t\tname: 'Troy Alexander',\r\n\t\tdate: '28 April 2020',\r\n\t\tamount: '$241.00',\r\n\t\tstatus: 'Approved',\r\n\t\tavatarColor: '#ff6b72'\r\n\t},\r\n];\r\n\r\n  const latestTransactionOption = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <span>\r\n          <div className=\"d-flex align-items-center\">\r\n            <ReloadOutlined />\r\n            <span className=\"ml-2\">Refresh</span>\r\n          </div>\r\n        </span>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <span>\r\n          <div className=\"d-flex align-items-center\">\r\n            <PrinterOutlined />\r\n            <span className=\"ml-2\">Print</span>\r\n          </div>\r\n        </span>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"12\">\r\n        <span>\r\n          <div className=\"d-flex align-items-center\">\r\n            <FileExcelOutlined />\r\n            <span className=\"ml-2\">Export</span>\r\n          </div>\r\n        </span>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: 'Sporting Code',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text, record) => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <Avatar size={30} className=\"font-size-sm\" style={{backgroundColor: record.avatarColor}}>\r\n            {utils.getNameInitial(text)}\r\n          </Avatar>\r\n          <span className=\"ml-2\">{text}</span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Event Location',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Duration',\r\n      dataIndex: 'amount',\r\n      key: 'amount',\r\n    },\r\n   \r\n  ];\r\n  const getPaymentStatus = status => {\r\n    if(status === 'Paid') {\r\n      return 'success'\r\n    }\r\n    if(status === 'Pending') {\r\n      return 'warning'\r\n    }\r\n    if(status === 'Expired') {\r\n      return 'error'\r\n    }\r\n    return ''\r\n  }\r\n  \r\n  const getShippingStatus = status => {\r\n    if(status === 'Ready') {\r\n      return 'blue'\r\n    }\r\n    if(status === 'Shipped') {\r\n      return 'cyan'\r\n    }\r\n    return ''\r\n  }\r\n\r\n const recentOrderData = [\r\n    {\r\n      id: '#5331',\r\n      name: 'Eileen Horton',\r\n      image: '/img/avatars/thumb-1.jpg',\r\n      date: 1573430400,\r\n      amount: 677,\r\n      paymentStatus: 'Paid',\r\n      orderStatus: 'Ready'\r\n    },\r\n    {\r\n      id: '#5328',\r\n      name: 'Terrance Moreno',\r\n      image: '/img/avatars/thumb-2.jpg',\r\n      date: 1572393600,\r\n      amount: 1328.35,\r\n      paymentStatus: 'Paid',\r\n      orderStatus: 'Ready'\r\n    },\r\n    {\r\n      id: '#5321',\r\n      name: 'Ron Vargas',\r\n      image: '/img/avatars/thumb-3.jpg',\r\n      date: 1593949805,\r\n      amount: 629,\r\n      paymentStatus: 'Paid',\r\n      orderStatus: 'Shipped'\r\n    },\r\n    {\r\n      id: '#5287',\r\n      name: 'Luke Cook',\r\n      image: '/img/avatars/thumb-4.jpg',\r\n      date: 1579132800,\r\n      amount: 25.9,\r\n      paymentStatus: 'Paid',\r\n      orderStatus: 'Shipped'\r\n    },\r\n    {\r\n      id: '#5351',\r\n      name: 'Joyce Freeman',\r\n      image: '/img/avatars/thumb-5.jpg',\r\n      date: 1591286400,\r\n      amount: 817.5,\r\n      paymentStatus: 'Pending',\r\n      orderStatus: 'Ready'\r\n    },\r\n  ]\r\n\r\n  const tableColumns02 = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id'\r\n    },\r\n    {\r\n      title: 'Product',\r\n      dataIndex: 'name',\r\n      render: (_, record) => (\r\n        <Flex>\r\n          <AvatarStatus size={30} src={record.image} name={record.name}/>\r\n        </Flex>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n    },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      render: (_, record) => (\r\n        <span>{moment.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)}</span>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'date')\r\n    },\r\n    {\r\n      title: 'Order status',\r\n      dataIndex: 'orderStatus',\r\n      render: (_, record) => (\r\n        <><Tag color={getShippingStatus(record.orderStatus)}>{record.orderStatus}</Tag></>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'orderStatus')\r\n    },\r\n    {\r\n      title: 'Payment status',\r\n      dataIndex: 'paymentStatus',\r\n      render: (_, record) => (\r\n        <><Badge status={getPaymentStatus(record.paymentStatus)} /><span>{record.paymentStatus}</span></>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'paymentStatus')\r\n    },\r\n    {\r\n      title: 'Total',\r\n      dataIndex: 'amount',\r\n      render: (_, record) => (\r\n        <span className=\"font-weight-semibold\">\r\n          <NumberFormat\r\n            displayType={'text'} \r\n            value={(Math.round(record.amount * 100) / 100).toFixed(2)} \r\n            prefix={'$'} \r\n            thousandSeparator={true} \r\n          />\r\n        </span>\r\n      ),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'amount')\r\n    }\r\n  ]\r\n \r\n\r\n  \r\n  return (\r\n    <>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={18}>\r\n          <RegiondataWidget \r\n            title=\"Subscribers by regions\"\r\n            data={regionData}\r\n            content={rederRegionTopEntrance}\r\n          />\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={6}>\r\n          <DonutChartWidget \r\n            series={sessionData} \r\n            labels={sessionLabels} \r\n            title=\"Viewers By Gender\"\r\n            customOptions={{colors: sessionColor}}\r\n            extra={\r\n              <Row  justify=\"center\">\r\n                <Col xs={20} sm={20} md={20} lg={24}>\r\n                  <div className=\"mt-4 mx-auto\" style={{maxWidth: 200}}>\r\n                    {conbinedSessionData.map(elm => (\r\n                      <Flex alignItems=\"center\" justifyContent=\"between\" className=\"mb-3\" key={elm.label}>\r\n                        <div>\r\n                          <Badge color={elm.color} />\r\n                          <span className=\"text-gray-light\">{elm.label}</span>\r\n                        </div>\r\n                        <span className=\"font-weight-bold text-dark\">{elm.data}</span>\r\n                      </Flex>\r\n                    ))}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n       \r\n        <Col xs={24} sm={24} md={24} lg={12} xxl={12}>\r\n          <Card title=\"Admin Members\">\r\n          <Table\r\n\t\t\tpagination={false}\r\n\t\t\tcolumns={tableColumns02} \r\n\t\t\tdataSource={recentOrderData} \r\n\t\t\trowKey='id'\r\n\t\t/>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={12}>\r\n\r\n        <Card title=\"List Of Sporting Codes\" extra={cardDropdown(latestTransactionOption)}>\r\n            <Table \r\n              className=\"no-border-last\" \r\n              columns={tableColumns} \r\n              dataSource={RecentTransactionData} \r\n              rowKey='id' \r\n              pagination={false}\r\n            />\r\n          </Card>\r\n\r\n\r\n\r\n        </Col>\r\n\r\n        <Col xs={24} sm={24} md={24} lg={12} xxl={24}>\r\n          <Card title=\"Event Log Standings\">\r\n          <Table\r\n    columns={columns}\r\n    expandable={{\r\n      expandedRowRender: record => <p style={{ margin: 0 }}>{record.description}</p>,\r\n      rowExpandable: record => record.name !== 'Not Expandable',\r\n    }}\r\n    dataSource={data}\r\n  />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AnalyticDashboard","export const DATE_FORMAT_YYYYMMdd = \"YYYYMMdd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd = \"YYYY-MM-dd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_Combined = \"YYYYMMddHHmm\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_HH_mm = \"YYYY-MM-dd HH:mm\";\r\nexport const DATE_FORMAT_DD_MM_YYYY = \"DD-MM-YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_DOT = \"DD.MM.YYYY\";\r\nexport const DATE_FORMAT_mm_dd_YYYY_WITH_SLASH = \"MM/dd/YYYY\";\r\nexport const DATE_FORMAT_m_d_YYYY_WITH_SLASH = \"M/d/YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_SLASH = \"DD/MM/YYYY\";\r\nexport const DATE_FORMAT_dd_MMM = \"ddMMM\";\r\nexport const DATE_FORMAT_dd_MM_yy = \"ddMMyy\";\r\nexport const DATE_FORMAT_dd_MMM_YYYY = \"ddMMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_COMBINED = \"DDMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss = \"YYYY-MM-dd'T'HH:mm:ss\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss_sz = \"YYYY-MM-dd'T'HH:mm:ss.SSS\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm = \"dd-MM-YYYY HH:mm\";\r\nexport const DATE_FORMAT_HH_mm = \"HH:mm\";\r\nexport const DATE_FORMAT_YYYY_MM_DDTHH_mm_ssZ = \"YYYY-MM-DD'T'HH:mm:ssZ\"; "],"sourceRoot":""}