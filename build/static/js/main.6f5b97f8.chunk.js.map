{"version":3,"sources":["components/shared-components/Flex/index.js","configs/AppConfig.js","constants/ThemeConstant.js","redux/constants/Auth.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js","utils/index.js","redux/actions/Auth.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","APP_NAME","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","direction","DIR_LTR","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","DIR_RTL","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","initTheme","theme","reducers","combineReducers","Theme","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","Icon","this","React","createElement","Component","superAdminNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","UsergroupAddOutlined","adminAdminNavTree","navigationConfig","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","SelectedLanguage","language","lang","filter","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","i","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","ListOption","name","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","onDirectionChange","useThemeSwitcher","switcher","themes","checked","onChange","isChecked","changedTheme","NavPanel","showDrawer","setState","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","useState","value","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","searchText","item","label","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","useEffect","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","isNavSide","getLayoutGutter","status","paddingLeft","paddingRight","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","RouteInterceptor","isAuthenticated","rest","render","currentAppLocale","Array","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","Utils","initials","shift","pop","navTree","route","p","hasOwnProperty","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","GG","BB","rgba","trim","str","replace","inParts","r","g","b","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","data","input","screens","breakpoints","signIn","signUp","signInWithGoogle","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.6f5b97f8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, DIR_LTR } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light',\r\n\tdirection: DIR_LTR\r\n};\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { \r\n  DashboardOutlined,UsergroupAddOutlined \r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\nconst superAdminNavTree = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/home`,\r\n  title: 'SuperAdmin',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'dashboard',\r\n      path: `${APP_PREFIX_PATH}/home`,\r\n      title: 'Dashboard',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'add-admins',\r\n      path: `${APP_PREFIX_PATH}/add-admins`,\r\n      title: 'Add Admins',\r\n      icon: UsergroupAddOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst adminAdminNavTree = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/home`,\r\n  title: 'Admin',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'dashboard',\r\n      path: `${APP_PREFIX_PATH}/home`,\r\n      title: 'Dashboard',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'add-admins',\r\n      path: `${APP_PREFIX_PATH}/add-admins`,\r\n      title: 'Add Admins',\r\n      icon: UsergroupAddOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\nconst navigationConfig = [\r\n  ...superAdminNavTree,\r\n  ...adminAdminNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tdirection,\r\n\tonDirectionChange\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\r\n\t\t\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement={this.props.direction === DIR_RTL ? 'left' : 'right'} \r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme, direction } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel direction={direction} />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/superadmins`} component={lazy(() => import(`./super-admins`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/add-admins`} component={lazy(() => import(`./super-admins/add-admins`))} />\r\n\r\n         <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/superadmins`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if(direction === DIR_LTR) {\r\n      return {paddingLeft: getLayoutGutter()}\r\n    }  \r\n    if(direction === DIR_RTL) {\r\n      return {paddingRight: getLayoutGutter()}\r\n    }\r\n    return {paddingLeft: getLayoutGutter()}\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/reset-password`} component={lazy(() => import(`./authentication/reset-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport useBodyClass from 'hooks/useBodyClass';\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: AUTH_PREFIX_PATH,\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, token, location, direction } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <RouteInterceptor path={APP_PREFIX_PATH} isAuthenticated={token}>\r\n            <AppLayout direction={direction} location={location}/>\r\n          </RouteInterceptor>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale, direction } =  theme;\r\n  const { token } = auth;\r\n  return { locale, direction, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}